/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.49
 * Generated at: 2019-11-11 01:30:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.CHAPTER10;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.File;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import com.oreilly.servlet.MultipartRequest;
import my.dao.*;
import my.util.*;
import my.model.*;
import java.util.*;
import java.sql.*;

public final class result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("my.model");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("my.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("my.dao");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.oreilly.servlet.multipart.DefaultFileRenamePolicy");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("com.oreilly.servlet.MultipartRequest");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>1:1문의하기</title>\r\n");
      out.write("<link href=\"qnadesign.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"page_header\">\r\n");
      out.write("    \t<div class=\"toplogo\"><a href=\"#\"><img src=\"images/top_logo.jpg\" width=\"276\" height=\"40\" alt=\"beautifullife\"></a>\r\n");
      out.write("      </div>\r\n");
      out.write("        <div class=\"topnav\">\r\n");
      out.write("        \t<ul>\r\n");
      out.write("            \t<li><a href=\"#\"><img src=\"images/top_menu1.jpg\" width=\"72\" height=\"24\" alt=\"ArtStory\"></a></li>\r\n");
      out.write("                <li><a href=\"#\"><img src=\"images/top_menu2.jpg\" width=\"76\" height=\"24\" alt=\"ArtStory\"></a></li>\r\n");
      out.write("                <li><a href=\"#\"><img src=\"images/top_menu3.jpg\" width=\"64\" height=\"24\" alt=\"ArtStory\"></a></li>\r\n");
      out.write("                <li><a href=\"#\"><img src=\"images/top_menu4.jpg\" width=\"134\" height=\"24\" alt=\"ArtStory\"></a></li>\r\n");
      out.write("                <li><a href=\"#\"><img src=\"images/top_menu5.jpg\" width=\"99\" height=\"24\" alt=\"ArtStory\"></a></li>\r\n");
      out.write("                <li><a href=\"#\"><img src=\"images/top_menu6.jpg\" width=\"52\" height=\"24\" alt=\"ArtStory\"></a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("  </div>\r\n");
      out.write("     \r\n");
      out.write("     <div class=\"page_subimg\">\r\n");
      out.write("     \t<div class=\"subimgline\"></div>\r\n");
      out.write("        <div class=\"subimg\">\r\n");
      out.write("        \t<div id=\"apDivSubimg\"></div>\r\n");
      out.write("       </div>\r\n");
      out.write("     </div>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"page_content\">\r\n");
      out.write("    \t<div class=\"leftmenu\">\r\n");
      out.write("   \t    \t<img src=\"images/left_title.jpg\" width=\"152\" height=\"24\" alt=\"membership\"> \r\n");
      out.write("        \t<ul>\r\n");
      out.write("            \t<li></li>\r\n");
      out.write("            \t<li><a href=\"#\">고객등록</a></li>\r\n");
      out.write("                <li><a href=\"#\">아이디찾기</a></li>\r\n");
      out.write("                <li><a href=\"#\">비번찾기</a></li>\r\n");
      out.write("                <li><a href=\"#\">마이페이지</a></li>\r\n");
      out.write("                <li><a href=\"#\">1:1문의하기</a></li>\r\n");
      out.write("                <li><a href=\"#\">질문내역</a></li>\r\n");
      out.write("                <li><a href=\"#\">후기내역</a></li>\r\n");
      out.write("                <li><a href=\"#\">쿠폰내격</a></li>\r\n");
      out.write("                <li><a href=\"#\">적립금내역</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"rightcon\">\r\n");
      out.write("                <img src=\"images/title2.jpg\" width=\"464\" height=\"58\" alt=\"고객등록\">\r\n");
      out.write("                <div class=\"tablestyle\">\r\n");
      out.write("                ");
  
					//String uploadPath = request.getRealPath("/movies");//만든 movies폴더 이름 쓰기
 					String uploadPath = "C:\\Users\\kimna\\workspace\\1111\\WebContent\\movies";
					
  				  int maxSize =1024 *1024 *10;
   
 				   Connection conn = ConnectionProvider.getConnection();//데이터베이스 처리하는 애니까 일단 주석처리
 					   String title = "";
 					  String maker = "";
 					 String memo = "";
 					String fileName = "";//글로벌 변수로 선언
 				   try{
        
  				  MultipartRequest multi =new MultipartRequest(request,uploadPath,maxSize,"utf-8",new DefaultFileRenamePolicy());
         			//이미지 포함해서 멀티로 넘어온 애들을 받아주는 객체
  					     title = multi.getParameter("title");
   					     maker = multi.getParameter("maker");
    				    memo = multi.getParameter("memo");
    				    fileName = multi.getFilesystemName("movieImage");
     				   Movie movie = new Movie(title, maker, memo, fileName);//movie 객체 생성
 					       MovieDao dao = new MovieDao();//dao객체 생성
       					 dao.insert(conn, movie);//dao의 insert메소드 실행
        
 					   } catch (Exception e) {}
				
      out.write("\r\n");
      out.write("                <h2>영화 정보가 잘 저장되었습니다람쥐썬더</h2>\r\n");
      out.write("         ");
      out.print(title );
      out.write(':');
      out.print(maker );
      out.write(':');
      out.print(memo );
      out.write(':');
      out.print(fileName );
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
